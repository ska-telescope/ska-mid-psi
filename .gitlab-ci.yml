image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: false
  TANGO_HOST: databaseds-tango-base:10000
  CLUSTER_DOMAIN: cluster.local
  K8S_TIMEOUT: 800s
  DISH_ID: ska001
  DISH_LMC_ENABLED: true
  PST_ENABLED: false
  SPFRX_ENABLED: false

stages:
  - lint
  - on_demand_psi
  - build
  - deploy
  - log-collector
  - join-reports
  - pages
  - publish
  - scan
  - cleanup

include:

  # Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

  # deploy steps to psi mid
  - local: "/.gitlab/ci/psi-mid.gitlab-ci.yml"
    
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/xray-publish.gitlab-ci.yml'

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

pages:
  rules:
    - when: never

log-collector:
  stage: log-collector
  extends:
    - .mid
  script:
    - mkdir -p logs
    - echo "$CI_JOB_ID" >> logs/log_collector_id.txt
    - POD_LIST=$(kubectl get pods -n $KUBE_NAMESPACE --no-headers -o custom-columns=":metadata.name")
    - for pod in ${POD_LIST[@]}; do echo "kubectl logs $pod -n $KUBE_NAMESPACE --since=3h &> logs/${pod}.log" ; kubectl logs $pod -n $KUBE_NAMESPACE --since=3h &> logs/${pod}.log ; done
  needs:
    - job: python-test
  artifacts:
    paths:
    - logs/*.log
    - logs/log_collector_id.txt
  allow_failure: true
