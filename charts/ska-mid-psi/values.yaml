display: ":0"
xauthority: "~/.Xauthority"

global:
  minikube: false
  operator: true
  exposeAllDS: true
  annotations:
    app.gitlab.com/app: ska-mid-psi
    app.gitlab.com/env: ska
  taranta_auth_enabled: false
  taranta_dashboard_enabled: true
  sub-system:
    tango-base:
      enabled: false
    ska-tango-base:
      enabled: false
    ska-taranta:
      enabled: false
  retry:
    - "--sleep=3"
    - "--tries=100"
  tango_host: databaseds-tango-base:10000
  device_server_port: 45450
  cluster_domain: cluster.local
  data-product-pvc-name: test-sdp-pvc
  tangodb_fqdn: localhost
  tangodb_port: 10000
  raw_user_account: ""
  raw_user_pass: ""

ska-tango-base:
  enabled: true
  vnc:
    replicas: 1
    enabled: true
  tangorest:
    enabled: true
    replicas: 1
  tangodb:
    use_pv: true

ska-taranta:
  legacy_compatibility: true
  enabled: true


#telescope control
## mid-cbf
ska-mid-cbf-mcs:
  signalVerificationVersion: 0.2.24
  hostInfo:
    environment: "mid-psi"
  enabled: true
  global:
    minikube: false
# Uncomment the section below to use custom MCS image
#  midcbf:
#    image:
#      registry: registry.gitlab.com/ska-telescope/ska-mid-cbf-mcs
#      image: ska-mid-cbf-mcs
#      tag: <Image tag from MCS pipeline>
#      pullPolicy: IfNotPresent

ska-mid-cbf-engineering-console:
  enabled: true
# Uncomment the section below to use custom Engineering Console image
#  engineeringconsole:
#    image:
#      registry: registry.gitlab.com/ska-telescope/ska-mid-cbf-engineering-console
#      image: ska-mid-cbf-engineering-console
#      tag: <Image tag from EC pipeline>
#      pullPolicy: IfNotPresent

ska-mid-cbf-tmleafnode:
  enabled: true

## EDA
ska-tango-archiver:
  legacy_compatibility: true
  enabled: false
  telescope: SKA-mid
  telescope_environment: MID_PSI
  hostname: timescaledb.ska-eda-mid-db.svc.cluster.local
  dbname: default_timescaledb
  dbuser: admin
  dbpassword: admin
  port: 5432
  configuration_manager: mid-eda/cm/01
  event_subscriber: mid-eda/es/01
  archwizard_config: MyHDB=tango://databaseds-tango-base.{{.Release.Name}}.svc.cluster.local:10000/mid-eda/cm/01

## mid-csp
ska-csp-lmc-mid:
  enabled: true

## tmc-mid
tmc-mid:
  enabled: true
  telescope: SKA-mid
  ska-tango-base:
    enabled: false
  deviceServers:
    mocks:
      enabled: true
      dish: true
      csp: false
      sdp: true

## sdp
ska-sdp:
  enabled: true
  ska-tango-base:
    enabled: false
  helmdeploy:
    enableNADClusterRole: true
  data-pvc:
    create:
      enabled: true
      size: 5Gi
      storageClassName: nfss1

# SPFRx
spfrx:
  enabled: true
  console:
    version: 0.2.5
  address: 192.168.8.200
  bin: /usr/local/bin
  local_dir: artifacts
  scripts_dir: scripts
  instance: spfrx-20
  logging_level: 4

# ODA
ska-db-oda:
  enabled: true
  rest:
    enabled: true
    backend:
      postgres:
        user: "postgres"
        password: "secretpassword"

# The following values overwrite the default values in the postgresql dependency.
# See https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  commonLabels:
    app: ska-db-oda

  enabled: true

  image:
    debug: true

  auth:
    postgresPassword: "secretpassword"

  primary:
    service:
      type: LoadBalancer

    initdb:
      scriptsConfigMap: ska-db-oda-initdb
      user: "postgres"

    persistence:
      enabled: false
      ## @param primary.persistence.mountPath The path the volume will be mounted at
      ## Note: useful when using custom PostgreSQL images
      ##
      mountPath: /bitnami/postgresql
      ## @param primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: "nfss1"
      ## @param primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteMany
      ## @param primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 12Gi

# The following values are used by the templates in this chart for create pgAdmin and initialising the database
pgadmin4:
  enabled: true

  replicaCount: 1

  service:
    type: LoadBalancer
    port: 80

  image:
    registry: docker.io
    repository: dpage/pgadmin4
    tag: "6.10"
    pullPolicy: IfNotPresent

  env:
    # can be email or nickname
    email: buttons@skao.int
    password: secretpassword

  serverDefinitions:
    ## If true, server definitions will be created
    ##
    enabled: true

    servers:
     firstServer:
       Name: "ODA"
       Group: "Servers"
       Port: 5432
       Username: "postgres"
       Host: "localhost"
       SSLMode: "prefer"
       MaintenanceDB: "postgres"

  resources: {}

  containerPorts:
    http: 80

  ingress:
    enabled: true

initDbName: ska-db-oda-initdb # must be equals to postgresql.primary.initdb.scriptsConfigMap
initDbBasePath: data/
initDbScripts:
- create_tables.sql
- insert_entries.sql

ska-ser-skuid:
  enabled: true
